# Parameters for DaBaDEx -p (mode 'put')

# Location of data to be imported
# A file or directory can be provided. If 'dataFile' refers to a directory,
# *only the newest file* is chosen. 

dataFile = testdb/update.csv

# Move dataFile after being successfully processed to specified directory (optional)
# (if directory does not exist it will be created)
# moveDataFileToDir = processed

# Name of fields (table columns)
# Important: Numeric fields, i.e. integer and floating 
# point decimals are to be labeled with an apostrophe (').

fields = auftragnr',stammnr,fallnr,labornr,material

# Key (optional)
# Which entry in the above field-vector (fields) represents a key controlling
# subsequent action (see action below)? If not given, insertion of all datarows
# is attempted.
# If multiple keys, separate entries by comma (",")

key = 3,5,1

# Action (optional)
# This can be "update" or "keep" depending on whether rows with same key
# are to be updated or left unchanged, respectively.
# If key is provided (see above) the default action is "update". 
# (If key is not provided, parameter 'action' is not read).

action = update

# Minimal number of text rows (optional)
# If the found number of rows in 'dataFile' is less, the process is aborted.
# This is useful to avoid the processing of empty files (e.g. those containing only
# header data).

minTextRows = 256
 
# Cron Schedule (optional)
# To defer or schedule the present task, use this parameter.
# Refer to the manual at
# http://www.sauronsoftware.it/projects/cron4j/manual.php
# for the formulation of scheduling patterns.

#cronSchedule = * * * * *

# Database connection
# The following fields contain all necessary information to connect to
# the database.
# Please change accordingly. Preinstalled options include drivers for
# PostgreSQL, MySQL, Sybase, and MS SQL Server. Other databases can be
# accessed through further third party jdbc drivers made available in the
# classpath (e.g. as jar files copied into the lib folder); parameters
# for dburl and driver have then to be adapted according to the supplier.

dburl = jdbc:postgresql://localhost:5432/test

# Alternatives (please uncomment to activate):
# MySQL:
#dburl = jdbc:mysql://server:port/database
# Sybase:
#dburl = jdbc:jtds:sybase://server:port/database
# Microsoft SQL Server:
#dburl = jdbc:jtds:sqlserver://server:port/database

driver = org.postgresql.Driver

# Alternatives:
# MySQL:
#driver = com.mysql.jdbc.Driver
# Sybase and MS SQL Server:
#driver = net.sourceforge.jtds.jdbc.Driver

table = importziel
user = importer
pass = importer

# Follow up command (optional)
# If provided, this command is executed after completion of the present task. 
# This option can e.g. be used to couple data extraction from one database to data 
# upload into another database.

#followUp = notepad
